# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 8 * * 1,4'

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: ["ubuntu-20.04", "ubuntu-22.04"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        env:
          CURL_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
        run: |
          sudo apt-add-repository -y ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get -y update
          sudo apt-get install -y gdal-bin python-tk libgdal-dev libproj-dev libgeos-dev
          python -m pip install --upgrade pip wheel
          pip install -e .[complete]
          pip install -r test/requirements.txt
          pip freeze

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 mapchete --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 mapchete --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Start containers
        run: |
          docker-compose -f "test/docker-compose.yml" up -d

      - name: Test with pytest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REQUEST_PAYER: ${{ secrets.AWS_REQUEST_PAYER }}
          CURL_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
        run: |
          pytest -v --cov mapchete

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          coveralls --service=github

      - name: Stop containers
        if: always()
        run: docker-compose -f "test/docker-compose.yml" down